#!/usr/bin/env node
/**
 * xloger command-line interface
 * use:
 *	xloger --help to get help.
 *	xloger start to start a daemon service.
 *	xloger stop to stop the server.
 */

var pwd = __dirname
,	os = require('os')
,	fs = require("fs")
,	path = require('path')
,	program  = require('commander')
,	jsonfile = require('jsonfile')
,	defs = require("../defaults.json")
,	pkg	 = require("../package")
,	execSync = require('child_process').execSync
,	configloader	= require('../server/lib/configloader')
;

var	app_script = path.join(pwd, "../xloger.js");

// assign the version from package.json
program.version(pkg.version);

// load the user config file which exists.
var config = configloader.load();
var daemon = require("daemonize2").setup({
    main: app_script,
    name: pkg.name,
    pidfile: config.pidfile
});


function start(options){
	if(options.port) config.port = options.port;
	if(options.host) config.host = options.host;
	if(options.debug) config.debug = true;
	global.config = config;

	if(options.debug){
		require(app_script);
		return;
	}else{
		daemon.start();
	}
}

function stop(){
	daemon.stop();
}


function restart(options){
	stop();
	start(options);
}


/**
 * start command
 */
program
	.command('start')
	.description('start xloger server with web gui.')
	.option("-h, --host", "the host xloger server listened, default: 127.0.0.1")
	.option("-p, --port", "the port xloger server listened, default: 9527")
	.option("-d, --debug", "debug mode, default to daemon mode.")
	.action(start);

/**
 * stop command
 */
program
	.command('stop')
	.description('stop xloger server.')
	.action(stop);


program
	.command("restart")
	.description("restart xloger server")
	.option("-h, --host", "the host xloger server listened, default: 127.0.0.1")
	.option("-p, --port", "the port xloger server listened, default: 9527")
	.option("-d, --debug", "debug mode, default to daemon mode.")
	.action(restart)


program.parse(process.argv);